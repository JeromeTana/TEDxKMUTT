---
import { flattenMarkdown } from "@/i18n/utils";
import Layout from "@/layouts/Layout.astro";
import { getEntry, getCollection } from "astro:content";
import BlogItem from "@/components/BlogItem.astro";
import SocialButtons from "@/layouts/SocialButtons.astro";

const { slug } = Astro.params ;

if (slug === undefined) {
    throw new Error("Slug is required");
}
const entry = await getEntry("read", slug);

if (entry === undefined) {
    return Astro.redirect("/404");
}

const author = (await getCollection("author")).find(a => a.id === entry.data.author.id)?.data as Author;

async function getRelatedArticles() {
    const allEntries = await getCollection("read");
        return Promise.all(allEntries.filter((e) => e.id !== entry?.id).map(async (e) => ({
            item: e,
            author: (await getCollection("author")).find(a => a.id === e.data.author.id)?.data as Author,
        })));
}


---
<Layout title="Read · TEDxKMUTT">

    <main class="mx-auto max-w-lg lg:max-w-4xl pt-8">
        <img src={entry.data.thumbnail.src} alt={entry.data.thumbnail.alt} class="object-cover rounded-xl w-full">
        <h1 class="text-4xl font-bold mt-8">{entry.data.title}</h1>
        <div class="flex items-center">
            {
                entry.data.categories.map((category) => (
                    <span class="bg-[#46000C] mt-6 mb-2 text-red-600 rounded-full text-sm px-3 py-1 mr-2">
                        {category.toUpperCase()}
                    </span>
                ))
            }
        </div>

        <div class="pt-8">{flattenMarkdown(entry.body)}</div>

        <div class="flex items-center mt-8">
            <img
                src={author.avatar.src}
                class="w-8 h-8 object-cover rounded-full mr-3"
                alt={`${author.name}'s avatar`}
            />
            <div class="text-sm">
                <p>{author.name}</p>
                <p class="text-xs text-gray-400">
                    {entry.data.pubDate.toDateString()}
                </p>
            </div>
        </div>

        <div class="mt-12">
            <SocialButtons facebookUrl="" 
            xUrl=""
            linkedinUrl=""/>
            </div>

        <div class="mt-12">
            <h1>อ่านบทความอื่น ๆ เพิ่มเติม 
            {
                getRelatedArticles().then(relatedArticles => 
                    relatedArticles.map(({ item, author }) => (
                        <BlogItem
                            blog={item}
                            author={author}
                        />
                    ))
                )
            }
        </div>
        
    </main>

</Layout>