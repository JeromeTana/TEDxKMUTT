---
interface Props {
  blog: {
    thumbnail: {
      src: string;
      alt?: string;
    };
    categories: string[];
    title: string;
    author: {
      id: string;
    };
    pubDate: Date;
  };
  author: {
    name: string;
    avatar: {
      src: string;
      alt?: string;
    };
  };
    content: string;
};

const { blog, author, content } = Astro.props as Props;

function extractContent(text: string) {
  if (typeof text !== "string") return "";
  const lines = text.split("\n");
  if (lines[0] && lines[0].startsWith("#")) {
    lines.shift()?.replace("#", "").trim() || "";
  }
  const content = lines.join(" ");
  return content;
}

---

<div class="text-white p-4 rounded-lg space-y-3">
    <div class="relative rounded-2xl overflow-hidden">
        <img src={blog.thumbnail.src} alt={blog.thumbnail.alt} class="w-full h-52 object-cover" />
        <div class="absolute inset-0 bg-black opacity-50"></div>
    </div>
    <div class="flex items-center">

        {
            blog.categories.map((category) => (
                <span class="bg-[#46000C] mt-6 mb-2 text-red-600 rounded-full text-sm px-3 py-1 mr-2">{category.toUpperCase()}</span>
            ))
        }

    </div>
    <h2 class="text-2xl font-bold">{blog.title}</h2>
    <p class="text-gray-400 text-md line-clamp-2">{content}</p>
    <div class="flex items-center space-x-1 space-y-4">
        <img src={author.avatar.src} class="w-8 h-8 object-cover rounded-full mr-2" alt={`${author.name}'s avatar`} />
        <div class="text-sm">
            <p>{author.name}</p>
            <p class="text-xs text-gray-400">{blog.pubDate.toDateString()}</p>
        </div>
    </div>
</div>